    1  ls
    2  cd e:
    3  ls
    4  d
    5  d:
    6  cd D:
    7  ls
    8  echo $EDITOR
    9  d:
   10  d
   11  cd dl
   12  cd ：
   13  cd d
   14  ls
   15  cd e
   16  cd dL
   17  cd e:
   18  ls
   19  qi
   20  qiyi
   21  ls
   22  Offline
   23  cd -
   24  cd ..
   25  pushd Qiyi
   26  pushd Offline
   27  popd 
   28  popd
   29  d
   30  3
   31  ls help
   32  ls -help
   33  cd /?
   34  y
   35  vi
   36  ls
   37  cat demo
   38  vi demo
   39  cat demo
   40  vi demo
   41  exit
   42  githug
   43  ls
   44  ..
   45  rm githug
   46  rmdir githug
   47  ls
   48  githug
   49  ls
   50  vim 总结.md
   51  exit
   52  ls
   53  c:
   54  ls..
   55  cd ..
   56  cd..
   57  cd ..
   58  d
   59  0
   60  d
   61  1
   62  cd 
   63  ;
   64  ls
   65  e:
   66  cd e:
   67  cd c:
   68  ls
   69  d
   70  5
   71  vim terminal.md
   72  remove terminal.md
   73  delete terminal.md
   74  vim terminal.md
   75  rm terminal.md
   76  ls
   77  vim terminal学习笔记.md
   78  ls
   79  c:
   80  ls
   81  cd c:
   82  ls
   83  cd Documents\ and\ Settings
   84  ls ..
   85  cd ..
   86  ls
   87  cd Documents\ and\ Settings
   88  cd .
   89  cd ..
   90  ls
   91  exit
   92  mysql _V
   93  mysql -V
   94  mysql -u root < db_migrations/initialize_users_and_roles.sql
   95  g:
   96  cd G:
   97  cd odd_e/bbuddy-20160725
   98  mysql -u root < db_migrations/initialize_users_and_roles.sql
   99  mysql -u root -p root< db_migrations/initialize_users_and_roles.sql
  100  gradle check
  101  gradle bootRunByPort -Pport=8090
  102  com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure
  103  Hibernate Commons Annotations {4.0.5.Final}
  104  Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.\n\n\n\n\n\n\n\n\n\n\n\n\n\n
  105  gradle bootRunByPort -Pport=8090
  106  Loading class `com.mysql.jdbc.Driver'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary.\ngradle ;\n\n
  107  gradle check cucumber
  108  gradle bootRunByPort -Pport 8090
  109  gradle bootRunByPort -Pport=8090
  110  clear
  111  o.a.tomcat.jdbc.pool.ConnectionPool      : Unable to create initial connections of pool.
  112  mysql -V
  113  gradle bootRunByPort -Pport=8090
  114  gradle check
  115  gradle bootRunByPort -Pport=8090
  116  gradle check 
  117  gradle bootRunByPort -Pport=8090
  118  git status
  119  logout
  120  git clone git@github.com:bbuddies/bbuddy-20160725.git
  121  cd /
  122  ls
  123  cd etc/
  124  ls
  125  vim vimrc
  126  git status
  127  vim vimrc
  128  vim vimrc_bak
  129  vim vimrc
  130  rm vimrc
  131  ls
  132  vim vimrc
  133  vim vimrc_bak
  134  vim vimrc
  135  vim vimrc_bak
  136  vim vimrc
  137  filetype off
  138  colo desert
  139  set guifont=Menlo\ Regular\ for\ Powerline:h14
  140  set nobackup
  141  set guitablabel=%t
  142  set smartindent
  143  set smarttab
  144  set expandtab
  145  set softtabstop=4
  146  set tabstop=4
  147  set shiftwidth=4
  148  set listchars=tab:>-,trail:-
  149  set history=50
  150  set ruler
  151  set showcmd
  152  set incsearch
  153  set number
  154  set autoindent
  155  set mouse=a
  156  set scrolloff=5
  157  set ignorecase
  158  set smartcase
  159  set hid
  160  set nowrap
  161  syn on
  162  set confirm
  163  set encoding=utf-8
  164  set fileencodings=utf-8,chinese,latin-1
  165  set fileencoding=utf-8
  166  set fileformat=dos
  167  set fileformats=dos,unix
  168  " vim 自身命令行模式智能补全\nset wildmenu\n\n" 基于语法进行代码折叠
  169  " za，打开或关闭当前折叠；zM，关闭所有折叠；zR，打开所有折叠\nset foldmethod=syntax\n" 启动时关闭折叠代码
  170  set nofoldenable
  171  language messages zh_CN.utf-8
  172  filetype on
  173  filetype plugin on
  174  filetype plugin indent on
  175  command W w
  176  command Q q
  177  nmap <F2> :tabprevious<CR>
  178  nmap <F3> :tabnext<CR>
  179  nmap <F5> :e<CR>
  180  au BufRead,BufNewFile *.lh set filetype=lua
  181  au BufRead,BufNewFIle *.{md,mkd,mkdn,mark*} set filetype=markdown
  182  set nocompatible              " be iMproved, required\nfiletype off                  " required
  183  " set the runtime path to include Vundle and initialize\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n" alternatively, pass a path where Vundle should install plugins
  184  "call vundle#begin('~/some/path/here')\n\n" let Vundle manage Vundle, required
  185  Plugin 'VundleVim/Vundle.vim'
  186  Plugin 'fatih/vim-go'
  187  Plugin 'dyng/ctrlsf.vim'
  188  Plugin 'SirVer/ultisnips'
  189  Plugin 'honza/vim-snippets'
  190  Plugin 'scrooloose/nerdtree'
  191  Plugin 'Valloric/YouCompleteMe'
  192  Plugin 'derekwyatt/vim-fswitch'
  193  Plugin 'scrooloose/nerdcommenter'
  194  Plugin 'fholgado/minibufexpl.vim'
  195  Plugin 'terryma/vim-multiple-cursors'
  196  Plugin 'nathanaelkane/vim-indent-guides'
  197  Plugin 'octol/vim-cpp-enhanced-highlight'
  198  call vundle#end()            " required\nfiletype plugin indent on    " required
  199  " To ignore plugin indent changes, instead use:\n"filetype plugin on
  200  "\n" Brief help
  201  " :PluginList       - lists configured plugins\n" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
  202  " :PluginSearch foo - searches for foo; append `!` to refresh local cache\n" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
  203  "\n" see :h vundle for more details or wiki for FAQ
  204  " Put your non-Plugin stuff after this line\nlet mapleader=";"\n\nau FileType go nmap <leader>r <Plug>(go-run)\nau FileType go nmap <leader>b <Plug>(go-build)\nau FileType go nmap <leader>t <Plug>(go-test)\nau FileType go nmap <leader>c <Plug>(go-coverage)\n\nau FileType go nmap <Leader>ds <Plug>(go-def-split)\nau FileType go nmap <Leader>dv <Plug>(go-def-vertical)\nau FileType go nmap <Leader>dt <Plug>(go-def-tab)\n\nau FileType go nmap <Leader>gd <Plug>(go-doc)\nau FileType go nmap <Leader>gv <Plug>(go-doc-vertical)\n\nau FileType go nmap <Leader>gb <Plug>(go-doc-browser)\n\nau FileType go nmap <Leader>s <Plug>(go-implements)\nau FileType go nmap <Leader>i <Plug>(go-info)\n\n" 定义快捷键关闭当前分割窗口
  205  nmap <Leader>q :q<CR>
  206  " 随 vim 自启动\nlet g:indent_guides_enable_on_vim_startup=1\n" 从第二层开始可视化显示缩进
  207  let g:indent_guides_start_level=2
  208  " 色块宽度\nlet g:indent_guides_guide_size=1\n" 快捷键 i 开/关缩进可视化
  209  :nmap <silent> <Leader>i <Plug>IndentGuidesToggle
  210  " fswitch\n" *.cpp 和 *.h 间切换
  211  au! BufEnter *.cpp let b:fswitchdst = 'hpp,h' | let b:fswitchlocs = './,./include,../include'
  212  nmap <silent> <Leader>of :FSHere<cr>
  213  " YouCompleteMe\nnnoremap <leader>jc :YcmCompleter GoToDeclaration<CR>\n" 只能是 #include 或已打开的文件
  214  nnoremap <leader>jd :YcmCompleter GoToDefinition<CR>
  215  " YCM 补全菜单配色\n" " 菜单\nhighlight Pmenu ctermfg=2 ctermbg=3 guifg=#005f87 guibg=#EEE8D5\n" 选中项
  216  highlight PmenuSel ctermfg=2 ctermbg=3 guifg=#AFD700 guibg=#106900
  217  " 补全功能在注释中同样有效\nlet g:ycm_complete_in_comments=1\n" 允许 vim 加载 .ycm_extra_conf.py 文件，不再提示
  218  let g:ycm_confirm_extra_conf=0
  219  " 开启 YCM 标签补全引擎\nlet g:ycm_collect_identifiers_from_tags_files=1\n" 引入 C++ 标准库tags
  220  "set tags+=/data/misc/software/misc./vim/stdcpp.tags\n" YCM 集成 OmniCppComplete 补全引擎，设置其快捷键
  221  inoremap <leader>; <C-x><C-o>
  222  " 补全内容不以分割子窗口形式出现，只显示补全列表\nset completeopt-=preview\n" 从第一个键入字符就开始罗列匹配项
  223  let g:ycm_min_num_of_chars_for_completion=1
  224  " 禁止缓存匹配项，每次都重新生成匹配项\nlet g:ycm_cache_omnifunc=0\n" 语法关键字补全         
  225  let g:ycm_seed_identifiers_with_syntax=1
  226  " UltiSnips 的 tab 键与 YCM 冲突，重新设定\nlet g:UltiSnipsExpandTrigger="<leader><tab>"
  227  let g:UltiSnipsJumpForwardTrigger="<leader><tab>"
  228  let g:UltiSnipsJumpBackwardTrigger="<leader><s-tab>"
  229  " 使用 NERDTree 插件查看工程文件。设置快捷键，速记：file list\nnmap <Leader>fl :NERDTreeToggle<CR>\n" 设置NERDTree子窗口宽度
  230  let NERDTreeWinSize=32
  231  " 设置NERDTree子窗口位置\nlet NERDTreeWinPos="right"\n" 显示隐藏文件
  232  let NERDTreeShowHidden=1
  233  " NERDTree 子窗口中不显示冗余帮助信息\nlet NERDTreeMinimalUI=1\n" 删除文件时自动删除文件对应 buffer
  234  let NERDTreeAutoDeleteBuffer=1
  235  " 显示/隐藏 MiniBufExplorer 窗口\nmap <Leader>bl :MBEToggle<cr>\n" buffer 切换快捷键
  236  map <C-Tab> :MBEbn<cr>
  237  map <C-S-Tab> :MBEbp<cr>
  238  " 使用 ctrlsf.vim 插件在工程内全局查找光标所在关键字\nnnoremap <Leader>sf :CtrlSF<CR>\n\nset rtp+=/usr/local/lib/python2.7/site-packages/powerline/bindings/vim\nset laststatus=2\n" 高亮当前行
  239  set cursorline
  240  "set cursorcolumn\n" 高亮搜索结果
  241  set hlsearch
  242  vim
  243  vim vimrc
  244  vim vmi
  245  vim vimrc
  246  logout
  247  exit
  248  ~
  249  ls
  250  pw
  251  pwd
  252  /
  253  ls
  254  cd g:
  255  ls
  256  pwd
  257  git clone https://github.com/chenwenbo/dotfiles.git
  258  ls
  259  dotfiles
  260  ls
  261  windows
  262  ls
  263  cp vimrc /etc
  264  zsh
  265  z windows
  266  ls
  267  d 
  268  cd h:
  269  pwd
  270  ls
  271  cd h:
  272  ls
  273  /
  274  ls
  275  cd h
  276  ls
  277  h:
  278  ls
  279  cd h
  280  cd g:
  281  ls
  282  dotfiles
  283  ls
  284  windows
  285  ls
  286  ls -a
  287  ls
  288  cp .minttyrc ~/
  289  cp .zshrc ~/
  290  zp .tmux.conf ~/
  291  cp .tmux.conf ~/
  292  ..
  293  ls
  294  oh-my-zsh
  295  ls
  296  cp plugins ~/.oh-my-zsh/custom/plugins
  297  cp -r plugins ~/.oh-my-zsh/custom/plugins
  298  ls
  299  zsh
  300  pact install tmux
  301  z windows
  302  ls
  303  pwd
  304  z dotfiles
  305  ls
  306  pwd
  307  cd g:
  308  ls
  309  dotfiles
  310  ls
  311  windows/fonts
  312  ls
  313  cp *.ttf /cygdrive/c/Windows/Fonts
  cp *.ttf /cygdrive/c/Windows/Fonts
  314  zsh
  315  ls
  316  exit
  317  z dotfiles
  318  ls
  319  oh-my-zsh/plugins
  320  ls
  321  zsh-autosuggestions
  322  ls
  323  ls -a
  324  ls
  325  cd /cygdrive/c/Windows/Fonts
  326  open .
  327  z dotfiles
  328  ls
  329  windows/fonts
  330  cp Menlo\ Bold\ for\ Powerline.ttf Menlo\ Bold\ Italic\ for\ Powerline.ttf Menlo\ for\ Powerline.ttf Menlo\ Italic\ for\ Powerline.ttf SourceCodePro-Black.ttf SourceCodePro-BlackIt.ttf SourceCodePro-Bold.ttf SourceCodePro-BoldIt.ttf SourceCodePro-ExtraLight.ttf SourceCodePro-ExtraLightIt.ttf SourceCodePro-It.ttf SourceCodePro-Light.ttf SourceCodePro-LightIt.ttf SourceCodePro-Medium.ttf SourceCodePro-MediumIt.ttf SourceCodePro-Regular.ttf SourceCodePro-Semibold.ttf SourceCodePro-SemiboldIt.ttf /cygdrive/c/Windows/Fonts
  331  zsh
  332  ls
  333  exit
  334  ls
  335  pwd
  336  z dotfiles
  337  zshconfig
  338  git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions
  339  zshconfig
  340  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
  341  zsh
  342  zshconfig
  343  history
  344  history > history.txt
  345  vim history.txt
  346  open .
  347  ls
  348  vim readme.md
  349  ls
  350  win
  351  windows
  352  ls
  353  mv install_babun_app.sh buildBabun.sh
  354  vim buildBabun.sh
  355  open .
  356  ..
  357  gst
  358  gaa
  359  gcmsg "add install script"
  360  git config user.name "chenwenbo"
  361  git config user.email "594017622@qq.com\n"
  362  gcmsg "add install script"
  363  git push
  364  ls
  365  oh-my-zsh
  366  ..
  367  rm -rf oh-my-zsh
  368  gaa
  369  gcmsg "delete oh-my-zsh"
  370  gp
  371  vim buildBabun.sh
  372  windows
  373  ls
  374  vim buildBabun.sh
  375  history
